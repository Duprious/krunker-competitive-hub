// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role    @default(USER)         
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Tournament {
  id          String   @id @default(cuid())
  name        String
  region      String
  type        String
  slug        String
  description String
  hostName    String   @default("Krunker")
  maxTeams    Int      @default(8)
  startDate   DateTime @default("2023-11-06T21:54:55Z")
  endDate     DateTime @default("2024-11-06T21:54:55Z")
  createdAt   DateTime @default(now())

  @@map("Tournaments")
}

model KPCTeam {
  id String @id @default(cuid())
  teamName String
  discordPlayerOne String
  discordPlayerTwo String
  ignPlayerOne String
  ignPlayerTwo String
  captain String @default("Player 1")
  createdAt DateTime @default(now())
  validated Boolean @default(false)
}

enum Role {
  ADMIN
  USER
}